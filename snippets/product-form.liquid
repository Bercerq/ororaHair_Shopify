{%- comment -%}
Those are the option names for which we automatically detect swatch. For the color, we use them to display a swatch, while
for size, we use it to display a size chart (if applicable)
{%- endcomment -%}


{%- assign color_label = 'color,colour,couleur,colore,farbe,색,色,färg,farve' | split: ',' -%}
{%- assign size_label = 'size,taille,größe,tamanho,tamaño,koko,サイズ' | split: ',' -%}

{%- assign size_chart_page = '' -%}
{%- assign product_popovers = '' -%}
{%- assign show_option_label = false -%}

{%- assign selected_variant = product.selected_or_first_available_variant -%}

{%- form 'product', product, class: 'ProductForm' -%}

{% if product.metafields.my_fields.countdown_date != blank %}
  <div class="date__time" style="display: none;">{{product.metafields.my_fields.countdown_date}}</div>
{% if section.settings.timerType %}

  <link rel="stylesheet" href="{{ 'flipdown.css' | asset_url }}">
  <script src="{{ 'flipdown.js' | asset_url }}"></script>
  <div class="timer__wrapper">
    <div class="timer__heading">{{section.settings.timer__heading}}</div>
    <div id="flipdown" class="flipdown"></div>
  </div>

  <style>
    .timer__wrapper{
      margin-top: 10px;
    }
    .timer__heading{
      text-align: center;
      font-weight: 700;
      color: {{section.settings.flipdown__color}}
    }
    .flipdown.flipdown__theme-dark .rotor, .flipdown.flipdown__theme-dark .rotor-top, .flipdown.flipdown__theme-dark .rotor-leaf-front,
    .flipdown.flipdown__theme-dark .rotor-bottom, .flipdown.flipdown__theme-dark .rotor-leaf-rear{
      background-color: {{section.settings.background__color}};
      color: {{section.settings.text__color}};
    }
  </style>

  <script>
    let flipdate = document.querySelector('.date__time').innerHTML
    var twoDaysFromNow = (new Date(flipdate).getTime() / 1000);

    var flipdown = new FlipDown(twoDaysFromNow)

    // Start the countdown
    .start()

    // Do something when the countdown ends
    .ifEnded(() => {
      console.log('The countdown has ended!');
    });
  </script>

  {% else %}
  <div class="box">
    <div class="timer__heading">{{section.settings.timer__heading}}</div>
    <div class="allTime">
        <div class="wp days"></div>
        <div class="wp hrs"></div>
        <div class="wp min"></div>
        <div class="wp sec"></div>
    </div>
  </div>

  <style>
    .box .allTime .wp span{
      font-size: 14px !important;
      font-family: 'futura-pt';
      font-weight: {{section.settings.text_weight}};
    }
    .timer__heading{
      white-space: nowrap;
      font-family: 'futura-pt';
      font-weight: {{section.settings.heading_weight}};
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      background: {{section.settings.heading__color}};
      padding: 2px 10px;
      top: -15px;
      border: 3px solid {{section.settings.background__color}};
    }
      .box {
        position: relative;
        align-items: center;
        display: inline-flex;
        flex-wrap: nowrap;
        flex-direction: column;
        color: {{section.settings.text__color}};
        background: {{section.settings.background__color}};
        padding: 25px 40px;
        margin: 20px 0;
      }
      .box .allTime {
        align-items: center;
        display: flex;
        flex-wrap: nowrap;
        flex-direction: row;
        font-weight: 500;
        justify-content: center;	
      }
      .box .allTime .wp {
        align-items: center;
        display: inline-flex;
        flex-flow: column wrap;
        justify-content: center;
        font-family: 'futura-pt';
        padding: 0 .375em;
        font-weight: {{section.settings.numbers_weight}};
        font-size: 20px;
      }
      .box .allTime .wp span {
        font-size: 1rem;
      }

      @media screen and (max-width: 768px) {
        .timer__heading{
          font-size: 18px;
        }
        .box{
          font-size: 20px;
          width: 100%;
        }
      }
      .wp.days {
        display: none !important;
      }
  </style>

  <script>
      let date = 'October 11, 5022 16:47'
      console.log(date);

      let countDownBox	= document.querySelector(".allTime");
      let daysBox			= document.querySelector(".days");
      let hrsBox			= document.querySelector(".hrs");
      let minBox			= document.querySelector(".min");
      let secBox			= document.querySelector(".sec");
      let countDownDate	= new Date(date).getTime();
      let countDownDateSave	= new Date(date).getTime();


      // COUNT DOWN FUNCTION
      let x = setInterval(function() {

        // GET DATE
        let now = new Date().getTime();

        // TIME BETWEEN NOW AND DATE
        let distance = countDownDate - now;

        // CALCULATION TIME
        let days 	= Math.floor(distance / (1000 * 60 * 60 * 24));
        let hours 	= Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        let minutes	= Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        let seconds	= Math.floor((distance % (1000 * 60)) / 1000);

        daysBox.innerHTML	= days + "<span>Days</span>";
        hrsBox.innerHTML 	= hours + "<span>Hours</span>";
        minBox.innerHTML 	= minutes + "<span>Minutes</span>";
        secBox.innerHTML 	= seconds + "<span>Seconds</span>";

        // console.log(typeof(countDownDateSave));
        // console.log(typeof(countDownDate));

        let addDay = function(date) {
          let newCountDownDate = new Date(date).setDate(new Date(date).getDate() + 1)

          let distance = newCountDownDate - now;

          let days 	= Math.floor(distance / (1000 * 60 * 60 * 24));
          let hours 	= Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
          let minutes	= Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
          let seconds	= Math.floor((distance % (1000 * 60)) / 1000);

          daysBox.innerHTML	= days + "<span>Days</span>";
          hrsBox.innerHTML 	= hours + "<span>Hours</span>";
          minBox.innerHTML 	= minutes + "<span>Minutes</span>";
          secBox.innerHTML 	= seconds + "<span>Seconds</span>";
        }

        // IF FINISH
        if (distance < 0) {
          // clearInterval(x);
          // document.querySelector('.box').style.display = 'none'
          // countDownBox.innerHTML = "¡FELICIDADES!";
          addDay(countDownDate)
        }
      }, 1000);
  </script>
{% endif %}
{% endif %}


  <div class="ProductForm__Variants">
    {%- unless product.has_only_default_variant -%}
      {%- for option in product.options_with_values -%}
        {%- assign downcase_option = option.name | downcase -%}

        {%- if section.settings.selector_mode == 'block' or color_label contains downcase_option and section.settings.show_color_swatch -%}
          {%- assign show_option_label = true -%}
        {%- endif -%}
      {%- endfor -%}

      {%- for option in product.options_with_values -%}
        {%- assign downcase_option = option.name | downcase -%}
        {%- capture popover_id -%}popover-{{ product.id }}-{{ section.id }}-{{ option.name | handle }}{%- endcapture -%}

        <div class="ProductForm__Option {% if show_option_label %}ProductForm__Option--labelled{% endif %}">
          {%- if show_option_label -%}
            {%- assign size_chart_page = pages['size-chart'] -%}

            <span class="ProductForm__Label">
              {{ option.name }}:

              {% if color_label contains downcase_option and section.settings.show_color_swatch %}
                <span class="ProductForm__SelectedValue">{{ option.selected_value }}</span>
              {% endif %}

              {%- if size_label contains downcase_option and size_chart_page != empty -%}
                <button type="button" class="ProductForm__LabelLink Link Text--subdued" data-action="open-modal" aria-controls="modal-{{ size_chart_page.handle }}">
                {{- 'product.form.size_chart' | t -}}
              </button>
              {%- endif -%}
            </span>
          {%- endif -%}

          {%- if color_label contains downcase_option and section.settings.show_color_swatch -%}
            <ul class="ColorSwatchList HorizontalList HorizontalList--spacingTight">
              {%- for value in option.values -%}
                {%- assign downcase_value = value | downcase -%}

                <li class="HorizontalList__Item">
                  {%- assign color_swatch_name = value | handle | append: '.png' -%}
                  {%- assign color_swatch_image = images[color_swatch_name] -%}

                  <input id="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" class="ColorSwatch__Radio" type="radio" name="option-{{ forloop.parentloop.index0 }}" value="{{ value | escape }}" {% if value == option.selected_value %}checked="checked"{% endif %} data-option-position="{{ option.position }}">
                  <label for="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" class="ColorSwatch ColorSwatch--large {% if downcase_value == 'white' %}ColorSwatch--white{% endif %}" data-tooltip="{{ value | escape }}" style="background-color: {{ value | replace: ' ', '' | downcase }}; {% if color_swatch_image != blank %}background-image: url({{ color_swatch_image | img_url: '64x64' }}){% endif %}">
                    <span class="u-visually-hidden">{{ value }}</span>
                  </label>
                </li>
              {%- endfor -%}
            </ul>
          {%- elsif section.settings.selector_mode == 'block' -%}
            <ul class="SizeSwatchList HorizontalList HorizontalList--spacingTight">
              {%- for value in option.values -%}
                <li class="HorizontalList__Item">
                  <input id="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" class="SizeSwatch__Radio" type="radio" name="option-{{ forloop.parentloop.index0 }}" value="{{ value | escape }}" {% if value == option.selected_value %}checked="checked"{% endif %} data-option-position="{{ option.position }}">
                  <label for="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" class="SizeSwatch">{{ value }}</label>
                </li>
              {%- endfor -%}
            </ul>
          {%- else -%}
            <button type="button" class="ProductForm__Item" aria-expanded="false" aria-controls="{{ popover_id }}">
              <span class="ProductForm__OptionName">{% unless show_option_label %}{{ option.name }}: {% endunless %}<span class="ProductForm__SelectedValue">{{ option.selected_value }}</span></span>
              {%- render 'icon' with 'select-arrow' -%}
            </button>

            {%- capture popover_html -%}
              {%- if color_label contains downcase_option and section.settings.show_color_carousel -%}
                {%- for value in option.values -%}
                  {%- if value == option.selected_value -%}
                    {%- assign initial_image_index = forloop.index0 -%}
                    {%- break -%}
                  {%- endif -%}
                {%- endfor -%}

                {%- capture flickity_options -%}
                {
                  "prevNextButtons": true,
                  "pageDots": true,
                  "initialIndex": {{ initial_image_index }},
                  "arrowShape": {"x0": 20, "x1": 60, "y1": 40, "x2": 60, "y2": 35, "x3": 25}
                }
                {%- endcapture -%}

                <div id="{{ popover_id }}" class="VariantSelector" aria-hidden="true">
                  {%- capture option_index -%}option{{ option.position }}{%- endcapture -%}

                  {%- assign option_indexes_excluded_color = '' -%}
                  {%- assign selected_variant_title_excluded_color = '' -%}

                  {%- for option_nested in product.options_with_values -%}
                    {%- if option_nested.position != option.position -%}
                      {%- assign option_indexes_excluded_color = option_indexes_excluded_color | append: option_nested.position | append: ',' -%}

                      {%- for option_nested_value in option_nested.values -%}
                        {%- if option_nested_value == option_nested.selected_value -%}
                          {%- assign selected_variant_title_excluded_color = selected_variant_title_excluded_color | append: option_nested_value -%}
                        {%- endif -%}
                      {%- endfor -%}
                    {%- endif -%}
                  {%- endfor -%}

                  {%- assign option_indexes_excluded_color = option_indexes_excluded_color | split: ',' | compact -%}

                  <div class="VariantSelector__Carousel Carousel" data-flickity-config='{{ flickity_options }}'>
                    {%- for value in option.values -%}
                      <div class="VariantSelector__Item Carousel__Cell {% if value == option.selected_value %}is-selected{% endif %}"
                           data-background-color="{{ value | split: ' ' | last | handle }}"
                           data-background-image="{{ value | handle | append: '.png' | asset_url }}"
                           data-option-position="{{ option.position }}"
                           data-option-value="{{ value | escape }}">
                        {%- for variant in product.variants -%}
                          {%- if variant[option_index] == value -%}
                            {%- assign variant_image = variant.image | default: product.featured_image -%}

                            {%- assign variant_title_excluded_color = '' -%}
                            {%- for option_index_excluded_color in option_indexes_excluded_color -%}
                              {%- capture sub_option_index -%}option{{ option_index_excluded_color }}{%- endcapture -%}
                              {%- assign variant_title_excluded_color = variant_title_excluded_color | append: variant[sub_option_index] -%}
                            {%- endfor -%}

                            <div data-variant-title="{{ variant_title_excluded_color | escape }}" class="VariantSelector__ImageWrapper AspectRatio AspectRatio--withFallback" aria-hidden="{% if selected_variant_title_excluded_color == variant_title_excluded_color %}false{% else %}true{% endif %}" style="max-width: {{ variant_image.width }}px; padding-bottom: {{ 100.0 | divided_by: variant_image.aspect_ratio }}%; --aspect-ratio: {{ variant_image.aspect_ratio }}">
                              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '200,400,600,800', image: variant_image -%}{%- endcapture -%}
                              {%- assign image_url = variant_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

                              <img class="VariantSelector__Image Image--lazyLoad Image--fadeIn" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" alt="{{ variant_image.alt | escape }}">
                              <span class="Image__Loader"></span>
                            </div>
                          {%- endif -%}
                        {%- endfor -%}
                      </div>
                    {%- endfor -%}
                  </div>

                  <div class="VariantSelector__Info">
                    <div class="VariantSelector__ChoiceList">
                      {%- for value in option.values -%}
                        {%- assign min_price_for_variant = product.price_max -%}

                        {%- for variant in product.variants -%}
                          {%- if variant[option_index] == value -%}
                            {%- assign min_price_for_variant = min_price_for_variant | at_most: variant.price -%}
                          {%- endif -%}
                        {%- endfor -%}

                        <div class="VariantSelector__Choice {% if value == option.selected_value %}is-selected{% endif %}">
                          <div class="VariantSelector__ChoiceColor">
                            {%- assign downcase_value = value | downcase -%}

                            {%- assign color_swatch_name = value | handle | append: '.png' -%}
                            {%- assign color_swatch_image = images[color_swatch_name] -%}

                            <span class="VariantSelector__ColorSwatch {% if downcase_value == 'white' %}VariantSelector__ColorSwatch--white{% endif %}" style="background-color: {{ value | replace: ' ', '' | downcase }}; {% if color_swatch_image != blank %}background-image: url({{ color_swatch_image | img_url: '64x64' }}){% endif %}"></span>
                            <span class="VariantSelector__ChoiceValue">{{ value }}</span>
                          </div>

                          <div class="VariantSelector__ChoicePrice" data-color-position="{{ option.position }}">
                            {%- if available_prices_for_option_value.size > 1 -%}
                              {%- capture formatted_min_price -%}<span>{{ min_price_for_variant | money_without_trailing_zeros }}</span>{%- endcapture -%}
                              <span class="Heading Text--subdued">{{ 'product.form.from_price_html' | t: min_price: formatted_min_price }}</span>
                            {%- else -%}
                              <span class="Heading Text--subdued">{{ min_price_for_variant | money_without_trailing_zeros }}</span>
                            {%- endif -%}
                          </div>
                        </div>
                      {%- endfor -%}
                    </div>

                    <button type="button" class="VariantSelector__Button Button Button--primary Button--full" data-action="select-variant">{{- 'product.form.select_model' | t -}}</button>
                  </div>
                </div>
              {%- else -%}
                <div id="{{ popover_id }}" class="OptionSelector Popover Popover--withMinWidth" aria-hidden="true">
                  <header class="Popover__Header">
                    <button type="button" class="Popover__Close Icon-Wrapper--clickable" data-action="close-popover">{% render 'icon' with 'close' %}</button>
                    <span class="Popover__Title Heading u-h4">{{ option.name | escape }}</span>
                  </header>

                  <div class="Popover__Content">
                    <div class="Popover__ValueList" data-scrollable>
                      {%- for value in option.values -%}
                        <button type="button" class="Popover__Value {% if value == option.selected_value %}is-selected{% endif %} Heading Link Link--primary u-h6"
                                data-value="{{ value | escape }}"
                                data-option-position="{{ option.position }}"
                                data-action="select-value">
                          {{- value | escape -}}
                        </button>
                      {%- endfor -%}
                    </div>

                    {%- assign size_chart_page = pages['size-chart'] -%}

                    {%- if show_option_label == false and size_label contains downcase_option and size_chart_page != empty -%}
                      <button type="button" class="Popover__FooterHelp Heading Link Link--primary Text--subdued u-h6" data-action="open-modal" aria-controls="modal-{{ size_chart_page.handle }}">
                        {{- 'product.form.size_chart' | t -}}
                      </button>
                    {%- endif -%}
                  </div>
                </div>
              {%- endif -%}
            {%- endcapture -%}

            {%- assign product_popovers = product_popovers | append: popover_html -%}
          {%- endif -%}
        </div>
      {%- endfor -%}

      <div class="no-js ProductForm__Option">
        <div class="Select Select--primary">
          {%- render 'icon' with 'select-arrow' -%}

          <select id="product-select-{{ product.id }}" name="id" title="Variant">
            {%- for variant in product.variants -%}
              <option {% if variant == selected_variant %}selected="selected"{% endif %} {% unless variant.available %}disabled="disabled"{% endunless %} value="{{ variant.id }}" data-sku="{{ variant.sku }}">{{ variant.title }} - {{ variant.price | money }}</option>
            {%- endfor -%}
          </select>
        </div>
      </div>
    {%- else -%}
      <input type="hidden" name="id" data-sku="{{ selected_variant.sku }}" value="{{ selected_variant.id }}">
    {%- endunless -%}

    {%- if section.settings.show_quantity_selector -%}
      {%- if show_option_label -%}
        <span class="ProductForm__Label">{{ 'product.form.quantity' | t }}:</span>
      {%- endif -%}

      <div class="ProductForm__QuantitySelector">
        <div class="QuantitySelector QuantitySelector--large">
          {%- assign quantity_minus_one = line_item.quantity | minus: 1 -%}

          <span class="QuantitySelector__Button Link Link--secondary" data-action="decrease-quantity">{% render 'icon' with 'minus' %}</span>
          <input type="text" class="QuantitySelector__CurrentQuantity" pattern="[0-9]*" name="quantity" value="1" aria-label="{{ 'product.form.quantity' | t }}">
          <span class="QuantitySelector__Button Link Link--secondary" data-action="increase-quantity">{% render 'icon' with 'plus' %}</span>
        </div>
      </div>
    {%- else -%}
      <input type="hidden" name="quantity" value="1">
    {%- endif -%}

    {%- if section.settings.show_inventory_quantity -%}
      {%- assign hide_inventory_quantity_by_default = false -%}
      
      {%- if selected_variant.inventory_management == blank or selected_variant.inventory_quantity <= 0 -%}
        {%- assign hide_inventory_quantity_by_default = true -%}
      {%- endif -%}

      {%- if section.settings.inventory_quantity_threshold != 0 and selected_variant.inventory_quantity > section.settings.inventory_quantity_threshold -%}
        {%- assign hide_inventory_quantity_by_default = true -%}
      {%- endif -%}

      <p class="ProductForm__Inventory Text--subdued" {% if hide_inventory_quantity_by_default %}style="display: none"{% endif %}>
        {%- if section.settings.inventory_quantity_threshold == 0 -%}
          {{- 'product.form.inventory_quantity_count' | t: count: selected_variant.inventory_quantity -}}
        {%- else -%}
          {{- 'product.form.low_inventory_quantity_count' | t: count: selected_variant.inventory_quantity -}}
        {%- endif -%}
      </p>
    {%- endif -%}
  </div>

  {%- comment -%}
  --------------------------------------------------------------------------------------------------------------------
  ADD TO CART BUTTON
  --------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  {%- if section.settings.show_payment_button == false or product.selling_plan_groups.size > 0 -%}
    {%- assign use_primary_button = true -%}
  {%- else -%}
    {%- assign use_primary_button = false -%}
  {%- endif -%}

  <button type="submit" data-use-primary-button="{% if use_primary_button %}true{% else %}false{% endif %}" class="ProductForm__AddToCart Button {% if selected_variant.available and use_primary_button %}Button--primary{% else %}Button--secondary{% endif %} Button--full" {% if selected_variant.available %}data-action="add-to-cart"{% else %}disabled="disabled"{% endif %}>
    {%- if selected_variant.available -%}
      <span>{% if product.template_suffix == 'pre-order' %}{{ 'product.form.pre_order' | t }}{% else %}{{ 'product.form.add_to_cart' | t }}{% endif %}</span>

      {%- if section.settings.show_price_in_button -%}
        <span class="Button__SeparatorDot"></span>
        <span>{{ selected_variant.price | money_without_trailing_zeros }}</span>
      {%- endif -%}
    {%- else -%}
      {{- 'product.form.sold_out' | t -}}
    {%- endif -%}
  </button>

  {%- if section.settings.show_payment_button and product.template_suffix != 'pre-order' -%}
    {{ form | payment_button }}
  {%- endif -%}

  {%- comment -%}The availability container will be added automatically if there is store pickup available{%- endcomment -%}
  {%- if section.settings.show_pickup_availability -%}
    <div class="ProductMeta__StoreAvailabilityContainer"></div>
  {%- endif -%}
{%- endform -%}

{%- if size_chart_page != empty -%}
  {%- comment -%}If we have a size chart we capture the modal content (it must be displayed outside the form for proper positioning){%- endcomment -%}

  {%- capture product_modals -%}
    <div id="modal-{{ size_chart_page.handle }}" class="Modal Modal--dark Modal--fullScreen Modal--pageContent" aria-hidden="true" role="dialog" data-scrollable>
      <header class="Modal__Header">
        <h2 class="Modal__Title Heading u-h1">{{ size_chart_page.title }}</h2>
      </header>

      <div class="Modal__Content Rte">
        <div class="Container Container--extraNarrow">
          {{- size_chart_page.content -}}
        </div>
      </div>

      <button class="Modal__Close RoundButton RoundButton--large" data-animate-bottom data-action="close-modal">{% render 'icon' with 'close' %}</button>
    </div>
  {%- endcapture -%}
{%- endif -%}

{%- if section.settings.show_payment_button and selected_variant.available == false -%}
  <style>
    #shopify-section-{{ section.id }} .shopify-payment-button {
      display: none;
    }
  </style>
{%- endif -%}

{%- comment -%}
--------------------------------------------------------------------------------------------------------------------
OFF SCREEN ELEMENTS

Implementation note: in the past (with "include") we could accumulate the data and output it outside the snippet
itself. However with the new "render" tag, everything that is captured inside cannot be used outside the snippet
itself. As a consequence we are moving them in JavaScript. This allows to make sure that those elements are upper
in the DOM tree, and do not show below the content
--------------------------------------------------------------------------------------------------------------------
{%- endcomment -%}

<div class="Product__OffScreen">
  {{- product_popovers -}}
  {{- product_modals -}}
</div>

{% comment %}
------------------------------------------------------------------------------
Product Data. This must be outputted for all products (including home page).

IMPORTANT: THIS CODE IS VITAL. DO NOT EDIT IT NOT REMOVE IT. MAKE SURE TO KEEP
THE EXACT SAME ATTRIBUTES.
------------------------------------------------------------------------------
{% endcomment %}

<script type="application/json" data-product-json>
  {
    "product": {{ product | json }},
    "selected_variant_id": {{ selected_variant.id }}
    {%- if section.settings.show_inventory_quantity -%}
      ,"inventories": {
        {%- for variant in product.variants -%}
          {%- assign inventory_message = '' -%}

          {%- if section.settings.inventory_quantity_threshold == 0 -%}
            {%- capture inventory_message -%}{{- 'product.form.inventory_quantity_count' | t: count: variant.inventory_quantity -}}{%- endcapture -%}
          {%- else -%}
            {%- capture inventory_message -%}{{- 'product.form.low_inventory_quantity_count' | t: count: variant.inventory_quantity -}}{%- endcapture -%}
          {%- endif -%}

          "{{ variant.id }}": {
            "inventory_management": {{ variant.inventory_management | json }},
            "inventory_policy": {{ variant.inventory_policy | json }},
            "inventory_quantity": {{ variant.inventory_quantity | json }},
            "inventory_message": {{ inventory_message | json }}
          }{% unless forloop.last %},{% endunless %}
        {%- endfor -%}
      }
    {%- endif -%}
  }
</script>